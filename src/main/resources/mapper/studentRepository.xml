<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="raisetech.StudentsManagement.repository.StudentRepository">

  <!-- 受講生の全件検索 -->
  <select id="search" resultType="raisetech.StudentsManagement.data.Student">
    SELECT *
    FROM students
  </select>

  <!-- 受講生の検索 -->
  <select id="searchStudent" resultType="raisetech.StudentsManagement.data.Student">
    SELECT *
    FROM students
    WHERE studentId = #{studentId}
  </select>

  <!-- 受講生のコース情報の全件検索 -->
  <select id="searchStudentCourseList" resultType="raisetech.StudentsManagement.data.StudentCourse">
    SELECT *
    FROM students_courses
  </select>

  <!-- 受講生IDに紐づく受講生のコース情報を検索 -->
  <select id="searchStudentCourse" resultType="raisetech.StudentsManagement.data.StudentCourse">
    SELECT *
    FROM students_courses
    WHERE studentId = #{studentId}
  </select>

  <!-- 受講生を新規登録 -->
  <insert id="registerStudent" parameterType="raisetech.StudentsManagement.data.Student" statementType="PREPARED" useGeneratedKeys="true" keyProperty="studentId">
    INSERT INTO students
    (name, kana, nickname, mail, area, age, sex, remark, is_deleted)
    VALUE(#{name}, #{kana}, #{nickname}, #{mail}, #{area}, #{age}, #{sex}, #{remark}, false)
  </insert>

  <!-- 受講生コース情報を新規登録 -->
  <insert id="registerStudentCourse" parameterType="raisetech.StudentsManagement.data.StudentCourse" statementType="PREPARED" useGeneratedKeys="true" keyProperty="courseId">
    INSERT INTO students_courses
    (studentId, course_name, starting_date, scheduled_end_date)
    VALUE(#{studentId}, #{courseName}, #{startingDate}, #{scheduledEndDate})
  </insert>

  <!-- 受講生を更新 -->
  <update id="updateStudent" parameterType="raisetech.StudentsManagement.data.Student" statementType="PREPARED">
    UPDATE students Set
    name = #{name}, kana = #{kana}, nickname = #{nickname}, mail = #{mail}, area = #{area}, age = #{age}, sex = #{sex}, remark = #{remark}, is_deleted = #{deleted} WHERE studentId = #{studentId}
  </update>

  <!-- 受講生コース情報を更新 -->
  <update id="updateStudentCourse" parameterType="raisetech.StudentsManagement.data.StudentCourse" statementType="PREPARED">
    UPDATE students_courses set
    course_name = #{courseName} WHERE courseId = #{courseId}
  </update>
</mapper>